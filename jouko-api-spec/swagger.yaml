swagger: '2.0'
info:
  title: Jouko API
  description: Jouko API spec
  version: 0.0.4
schemes:
  - https
basePath: /v1
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - bearer: []
consumes:
  - application/json;charset=utf-8
produces:
  - application/json;charset=utf-8
paths:
  '/admin/interruptiongroups/':
    get:
      operationId: listInterruptionGroups
      tags:
        - Interruption Groups
      summary: List interruption groups
      parameters:
        - name: firstResult
          in: query
          description: The offset of the first result
          required: true
          type: integer
        - name: maxResults
          in: query
          description: The maximum number of results
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/InterruptionGroup'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      operationId: createInterruptionGroup
      tags:
        - Interruption Groups
      summary: Create interruption group
      parameters:
        - name: body
          in: body
          description: The cancellation status
          required: true
          schema:
            $ref: '#/definitions/InterruptionGroup'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InterruptionGroup'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/admin/interruptiongroups/{groupId}':
    get:
      operationId: retrieveInterruptionGroup
      tags:
        - Interruptions
      summary: Retreive interruption group
      parameters:
        - name: groupId
          in: path
          description: The id of the interruption group
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InterruptionGroup'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      operationId: updateInterruptionGroup
      tags:
        - Interruptions
      summary: Update interruption group
      parameters:
        - name: groupId
          in: path
          description: The id of the interruption group
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: The cancellation status
          required: true
          schema:
            $ref: '#/definitions/InterruptionGroup'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InterruptionGroup'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    delete:
      operationId: deleteInterruption
      summary: Delete interruption
      description: Deletes an interruption
      tags:
        - Interruptions
      parameters:
        - name: groupId
          in: path
          description: The id of the interruption being deleted
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/admin/controllerDevices':
    get:
      operationId: listAllControllerDevices
      tags:
        - ControllerDevices
      summary: List all controller devices
      parameters:
        - name: firstResult
          in: query
          description: The offset of the first result
          required: true
          type: integer
        - name: maxResults
          in: query
          description: The maximum number of results
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/ControllerDevice'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      operationId: createControllerDevice
      tags:
        - ControllerDevices
      summary: Create controller device
      parameters:
        - name: body
          in: body
          description: The controller device to be created
          required: true
          schema:
            $ref: '#/definitions/ControllerDevice'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ControllerDevice'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/admin/controllerDevices/{controllerDeviceId}':
    get:
      operationId: retrieveControllerDevice
      tags:
        - ControllerDevices
      summary: Retreive controller device
      parameters:
        - name: controllerDeviceId
          in: path
          description: The id of the controller device
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ControllerDevice'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      operationId: updateControllerDevice
      tags:
        - ControllerDevices
      summary: Update controller device
      parameters:
        - name: controllerDeviceId
          in: path
          description: The id of the controller device
          required: true
          type: integer
          format: int64
        - name: newControllerDevice
          in: body
          description: The new data for the controller device
          required: true
          schema:
            $ref: '#/definitions/ControllerDevice'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ControllerDevice'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/users/{userId}/powerMeasurements':
    get:
      operationId: listAllMeasurements
      tags:
        - Measurements
      summary: List all measurements
      parameters:
        - name: userId
          in: path
          description: The id of the user
          required: true
          type: integer
          format: int6
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/PowerMeasurement'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
      
  '/admin/devices':
    get:
      operationId: listAllDevices
      tags:
        - Devices
      summary: List all devices
      parameters:
        - name: firstResult
          in: query
          description: The offset of the first result
          required: true
          type: integer
        - name: maxResults
          in: query
          description: The maximum number of results
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      operationId: createDevice
      tags:
        - Devices
      summary: Create device
      parameters:
        - name: body
          in: body
          description: The device to be created
          required: true
          schema:
            $ref: '#/definitions/Device'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Device'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/admin/devices/{deviceId}':
    get:
      operationId: retrieveDevice
      tags:
        - Devices
      summary: Retreive device
      parameters:
        - name: deviceId
          in: path
          description: The id of the device
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Device'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      operationId: updateDevice
      tags:
        - Devices
      summary: Update device
      parameters:
        - name: deviceId
          in: path
          description: The id of the device
          required: true
          type: integer
          format: int64
        - name: newDevice
          in: body
          description: The new data for the device
          required: true
          schema:
            $ref: '#/definitions/Device'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Device'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    delete:
      operationId: deleteDevice
      tags:
        - Devices
      summary: Delete device
      parameters:
        - name: deviceId
          in: path
          description: The id of the device
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/admin/users':
    get:
      operationId: listAllUsers
      tags:
        - Users
      summary: List all users
      parameters:
        - name: firstResult
          in: query
          description: The offset of the first result
          required: true
          type: integer
        - name: maxResults
          in: query
          description: The maximum number of results
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters:
        - name: body
          in: body
          description: The user to be created
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/admin/users/{userId}':
    get:
      operationId: retrieveUser
      tags:
        - Users
      summary: Retreive user
      parameters:
        - name: userId
          in: path
          description: The id of the user
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      operationId: updateUser
      tags:
        - Users
      summary: Update user
      parameters:
        - name: userId
          in: path
          description: The id of the user
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: The user to be updated
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/keycloakUsers/{keycloakId}':
    get:
      operationId: getUserByKeycloakId
      tags:
        - Users
      summary: Get an user by keycloak id
      parameters:
        - name: keycloakId
          in: path
          description: The keycloak id of the user to look up
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/users/{userId}/interruptions':
    get:
      operationId: listInterruptions
      tags:
        - Interruptions
      summary: List interruptions
      parameters:
        - name: userId
          in: path
          description: The user whose interruptions we list
          required: true
          type: integer
          format: int64
        - name: fromTime
          in: query
          description: List interruptions that start after this point of time, inclusive
          required: true
          type: string
          format: date-time
        - name: toTime
          in: query
          description: List interruptions that end before this point of time, exclusive
          required: true
          type: string
          format: date-time
        - name: deviceId
          in: query
          description: The device id whose interruptions we list, list all if omitted
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Interruption'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/users/{userId}/interruptions/{interruptionId}/cancelled':
    put:
      operationId: setInterruptionCancelled
      tags:
        - Interruptions
      summary: Set interruption's cancellation status
      parameters:
        - name: userId
          in: path
          description: The user who owns the interruption
          required: true
          type: integer
          format: int64
        - name: interruptionId
          in: path
          description: The id of the interruption to set cancellation status of
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: The cancellation status
          required: true
          schema:
            $ref: '#/definitions/InterruptionCancellation'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InterruptionCancellation'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/users/{userId}/devices':
    get:
      operationId: listDevices
      tags:
        - Devices
      summary: List devices
      parameters:
        - name: userId
          in: path
          description: The user who owns the interruption
          required: true
          type: integer
          format: int64
        - name: firstResult
          in: query
          description: The offset of the first result
          required: true
          type: integer
        - name: maxResults
          in: query
          description: The maximum number of results
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/users/{userId}/devices/{deviceId}/powerConsumption':
    get:
      operationId: getPowerConsumption
      tags:
        - Devices
      summary: Get the power consumption of the given device in a time period
      parameters:
        - name: userId
          in: path
          description: The user that owns the device
          required: true
          type: integer
          format: int64
        - name: deviceId
          in: path
          description: The device whose power consumption we measure
          required: true
          type: integer
          format: int64
        - name: fromTime
          in: query
          description: >-
            The start of the time period that we measure the consumption in,
            inclusive
          required: true
          type: string
          format: date-time
        - name: toTime
          in: query
          description: >-
            The end of the time period that we measure the consumption in,
            exclusive
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DevicePowerConsumption'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
definitions:
  Unauthorized:
    type: object
    required: [message]
    properties:
      message:
        description: The error message
        type: string
  InternalServerError:
    type: object
    required: [message]
    properties:
      message:
        description: The error message
        type: string
  User:
    type: object
    required:
      - id
      - keycloakId
    properties:
      id:
        description: User id
        type: integer
        format: int64
      keycloakId:
        description: The keycloak id of the user
        type: string
        format: uuid
  InterruptionGroup:
    type: object
    required:
      - id
      - startTime
      - endTime
    properties:
      id:
        description: Interruption id
        type: integer
        format: int64
      startTime:
        description: 'Start time of the interruption, inclusive'
        type: string
        format: date-time
      endTime:
        description: 'End time of the interruption, exclusive'
        type: string
        format: date-time
      overbookingFactor:
        description: 'Overbooking factor'
        type: number
        format: double
      powerSavingGoalInWatts:
        description: 'The amount of power this interruption is supposed to save, in watts'
        type: integer
        format: int64
  Interruption:
    type: object
    required:
      - id
      - startTime
      - endTime
      - deviceId
      - cancelled
    properties:
      id:
        description: Interruption id
        type: integer
        format: int64
      startTime:
        description: 'Start time of the interruption, inclusive'
        type: string
        format: date-time
      endTime:
        description: 'End time of the interruption, exclusive'
        type: string
        format: date-time
      deviceId:
        description: The ID of the interrupted device
        type: integer
        format: int64
      cancelled:
        description: True if the interruption has been cancelled
        type: boolean
      cancellationTime:
        description: The time when the interruption was cancelled
        type: string
        format: date-time
  InterruptionCancellation:
    type: object
    required: [cancelled]
    properties:
      cancelled:
        description: True if the interruption has been cancelled
        type: boolean
  PowerMeasurement:
    type: object
    properties:
      id:
        description: Measurement id
        type: integer
        format: int64
      startTime:
        description: 'Start time of the measurement'
        type: string
        format: date-time
      endTime:
        description: 'End time of the measurement'
        type: string
        format: date-time
      measurementType:
        description: 'Type of measurement'
        type: string
        enum:
          - AVERAGE
      measurementValue:
        type: number
        format: double
      device_id:
        description: Device id
        type: integer
        format: int64
      phaseNumber:
        description: Phasenumber
        type: integer
        format: int64
        
  Device:
    type: object
    required:
      - id
      - name
    properties:
      id:
        description: Device id
        type: integer
        format: int64
      name:
        description: The name of the device
        type: string
      userId:
        description: Device user id
        type: integer
        format: int64
      controllerId:
        description: Device controller id
        type: integer
        format: int64
  ControllerDevice:
    type: object
    required:
      - id
      - eui
      - key
    properties:
      id:
        description: Controller device id
        type: integer
        format: int64
      eui:
        description: The EUI of the controller device
        type: string
      key:
        description: The key of the controller device
        type: string
      communicationChannel:
        description: The communication channel of the controller device
        type: string
  DevicePowerConsumption:
    type: object
    required: [averageConsumptionInWatts]
    properties:
      averageConsumptionInWatts:
        description: 'The power consumption in the given time span, in watts'
        type: number
        format: double